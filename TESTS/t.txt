Ana KodlarÄ± Nereye YazacaÄŸÄ±m?
Ana kodlarÄ±nÄ± proje yapÄ±sÄ±na gÃ¶re organize etmek, bÃ¼yÃ¼dÃ¼kÃ§e kodu yÃ¶netmeni kolaylaÅŸtÄ±rÄ±r.

Senin Task Manager (GÃ¶rev YÃ¶neticisi) uygulaman iÃ§in en iyi yapÄ± ÅŸudur:

ğŸ“‚ gorev_yoneticisi/ (Ana proje klasÃ¶rÃ¼)
â”œâ”€â”€ ğŸ“‚ src/ (Kaynak kodlarÄ±)
â”‚ â”œâ”€â”€ ğŸ“‚ ui/ (ArayÃ¼z - Tkinter)
â”‚ â”‚ â”œâ”€â”€ main.py (Ana kod buraya) âœ…
â”‚ â”‚ â”œâ”€â”€ task_manager.py (GÃ¶rev yÃ¶netim iÅŸlemleri)
â”‚ â”‚ â”œâ”€â”€ buttons.py (Butonlar ve UI bileÅŸenleri)
â”‚ â”‚ â”œâ”€â”€ style.py (ArayÃ¼z renkleri, fontlar)
â”‚ â”‚
â”‚ â”œâ”€â”€ ğŸ“‚ backend/ (Ä°ÅŸ mantÄ±ÄŸÄ± & veri yÃ¶netimi)
â”‚ â”‚ â”œâ”€â”€ database.py (VeritabanÄ± iÅŸlemleri)
â”‚ â”‚ â”œâ”€â”€ task_logic.py (GÃ¶revleri yÃ¶netme ve taÅŸÄ±ma iÅŸlemleri)
â”‚ â”‚
â”œâ”€â”€ ğŸ“‚ data/ (Veriler)
â”‚ â”œâ”€â”€ tasks.json (GÃ¶revleri saklamak iÃ§in)
â”‚ â”œâ”€â”€ config.json (Ayarlar dosyasÄ±)

Ana Kod (Main) DosyasÄ±:
Ana kodlarÄ± VS Code iÃ§inde src/ui/main.py dosyasÄ±na yazacaksÄ±n.
Bu dosya uygulamayÄ± Ã§alÄ±ÅŸtÄ±ran ana dosya olacak.

Fonksiyon KodlarÄ±:
GÃ¶rev ekleme/silme fonksiyonlarÄ± â†’ task_manager.py
GÃ¶revleri veritabanÄ±na kaydetme, okuma â†’ database.py
UI butonlarÄ± ve arayÃ¼z yÃ¶netimi â†’ buttons.py
TasarÄ±m renkleri ve stiller â†’ style.py



----



arka plan
- arkaplan rengi beyaz olacak


ogelerin yerleri

- task manager yani to do list yapacagÄ±mÄ±z iÃ§in bir duzen  kuralÄ±m
- tasklarÄ± eklemek iÃ§in tam orta Ã¼st kÄ±sÄ±mda bir kare olsun iÃ§inde taskÄ± yazacagÄ±mÄ±z bir line edit
-  hemen altÄ±nda  hangi tarihte bu tasÄ± yapacagÄ±mÄ±zÄ± soran bir yer daha bizden gun ay yÄ±l ÅŸeklinde alsÄ±n
- sonra hemen altlarÄ±nda bir buton ekle  taskÄ± olusturmak iÃ§in 

style -  bu kare ust ortada olsun dÄ±ÅŸ ÅŸeritleri bellÄ± olsun amam gÃ¼zel gÃ¶rÃ¼nsÃ¼n butonun yerini ÅŸeklini rengini gÃ¼zel yap
- hepsi hizalÄ± ve pro olsun modern gÃ¶rÃ¼nsÃ¼n

task yeri 

- plan - yapÄ±lÄ±yor - bitti
- 3 tane bolme olacak yan yana ve biz Ã¼stte eklendgimiz tasklarÄ± plan sekmesine yazacaksÄ±n
- bu yerlerin iÃ§indeki tasklar bir kart formunda olsun  birbirinden ayrÄ± gÃ¶rÃ¼nsÃ¼n yani 
- bÃ¶lmelerin renkleri modern ve uyumlu farklÄ± olsun
- bolmelerÄ±n iÃ§indeki kartlar ise beyaz olsun kartÄ±n ÅŸelkli
- dÄ±kdortgen dusunecek olursak task ortada yazsÄ±n yazÄ± gÃ¼zel siyah olsun 
- kartÄ±n sag Ã¼st kÄ±smÄ±nda yukarda sordugumuz tarih ten suanÄ±n tarÄ±hÄ±nÄ± Ã§Ä±kararak bulacagÄ±mÄ±z gÃ¼n sayÄ±sÄ± yazsÄ±n orn 4 gÃ¼n 
- her eklenen kartÄ±n kapladÄ±ÄŸÄ± bir alan olsun yani boyutu, sÄ±nÄ±rlarÄ± ve diÄŸer kartlarÄ±n birbirine yakÄ±nlÄ±ÄŸÄ± sabit olsun.
- her yeni kart eklendiÄŸinde diÄŸer kartlarÄ±n kapladÄ±klarÄ± yer kÃ¼Ã§Ã¼lmesin dediÄŸim gibi boyutlarÄ± sabit olsun diÄŸer kartlar bulunduklarÄ± bÃ¶lmenin altÄ±na doÄŸru    kaysÄ±nlar.
- kartÄ±n iÃ§inde taÅŸÄ±mak ve silmek iÃ§in iki buton daha olsun yerlerini sen ayarla 
- her bolme kendi iÃ§inde ayrÄ± ayrÄ± kaydÄ±rÄ±labilir olsun
- her eklenen kart oneliklendirilsin yani teslim tarÄ±hÄ± yakÄ±n olanlar Ã¼stte uzak olanlar altta olacak ÅŸekilde sÄ±ralansÄ±nlar.



from PyQt5 import QtCore, QtGui, QtWidgets
